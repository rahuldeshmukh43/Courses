% This Mainfile will 
%(0)print readme file with parameters for the current iteration
%(1)Read Profiler data, interpolate to a spline and print coordinate file,
%(2)print abaqus.py file with continumm elements and contacts
%(3)run the python script using abaqus engine,
%(4)read output files generated by abaqus and also from the experiment
%(5)generate plots for side-forces and axial forces wrt displacement
%(6)save all the output to a mat file for the whole parametric space

clc; clear all; close all;

%select the parent directory and read profile data
parent_dir = uigetdir('/export/home/a/deshmuk5/abaqus/MWspring/Continuum_experimental/');

wire_dia = read_wire_dia_solid(parent_dir);% in mm
plate_thickness=10.0;%in mm

% define parameters which will vary and their possible values 
% friction_coeff=[0.3 0.6 1.0 1.5];
friction_coeff=[0.6];
% springyoungmodulus=[200E3 250E3 300E3 350E3];%Mpa
springyoungmodulus=[300E3];%Mpa
springmeshSize=[3.0 2.0];
platemeshSize=[3.0 2.0];
% platemeshSize=[5.0];
% springmeshSize=[5.0];

N=500; %number of points for the coordinate file

[X,Y,Z,spring_initial_radius,spring_max_radius]=read_profile(parent_dir,N,wire_dia);% in mm
spring_height=max(Z);% in mm

%create output structure for storing the results
result = struct('wire_dia',{},'spring_height',{},'spring_max_radius',{},'spring_initial_radius',{},'notinterfering',{},...
'sideforce',{},'axialforce',{},'sideforcemag',{},'displacement',{},...
'sideforcemag_exp',{},'axialforce_exp',{},'displacement_exp',{},...
'springyoungmodulus',{},'friction_coeff',{},'springmeshSize',{},'platemeshSize',{});
matfilename = strcat(parent_dir,'/result.mat');
keys = {};
values = [];
save(matfilename,'result','keys','values','wire_dia','spring_height','spring_max_radius','spring_initial_radius',...
    'springyoungmodulus','friction_coeff','springmeshSize');
itotal = 1;
fprintf(strcat(parent_dir,'\n'));
    for iE = 1:length(springyoungmodulus)
        for iu =1:length(friction_coeff)
           for ims = 1:length(springmeshSize) 
            %print cmd window to text file
            diary(strcat(parent_dir,'/cmdstatus.txt'));
            fprintf(strcat(num2str(itotal),'\n'));
            %if itotal>xx
            load(matfilename);
            % to resume from a bad iteration  where x
            %is the last successful iteration
            fprintf(strcat('*** Starting ',char(32),num2str(itotal),' iteration at ',datestr(now),'***\n'));
            %(0)create folder for this case and print out a readme file giving
            %the values of the parameters for this case
            foldername= strcat('E',num2str(iE),'u',num2str(iu),'m',num2str(ims));
            folderpath= strcat(parent_dir,'/runs/',foldername);
            mkdir(folderpath);
            filepath = strcat(folderpath,'/');
            printreadme_solid(filepath,wire_dia,spring_height,spring_max_radius,itotal,springyoungmodulus(iE),friction_coeff(iu),springmeshSize(ims),platemeshSize(ims));
            fprintf('* Readme file printed *\n');
            %(1)function call for printing the coordinate file
            coordinatefile_solid(filepath,X,Y,Z);
            fprintf('* Coordinate file printed *\n');
            %(2)function call for printing the abaqus.py file
            printpythoncode_solid(filepath,N,wire_dia,spring_height,spring_max_radius,...
                spring_initial_radius,plate_thickness,springyoungmodulus(iE),friction_coeff(iu),springmeshSize(ims),platemeshSize(ims));
            fprintf('* Abaqus python script printed *\n');
            %(3)run the abaqus.py file
            fprintf('* Submitting job to Abaqus *\n');
            cmdstatus = system(strcat('abaqus cae noGUI=',filepath,'MyModel_solid.py'));
            while cmdstatus
                %if license not fetched wait
                fprintf(2,'!!Error: Abaqus Licence not fetched, trying again in 5 sec!!\n');
                pause(5);% 5sec
                cmdstatus = system(strcat('abaqus cae noGUI=',filepath,'MyModel_solid.py')); %execute again
            end
            %reading if the geometry was interfering
            fid = fopen(strcat(filepath,'notinterfering.txt'),'r');
            notinterfering = fscanf(fid,'%d');
            fclose(fid);
            
            %(4)function call for reading data from output
            fprintf('* Reading results *\n');
            [sideforcemag,sideforce,axialforce,displacement,sideforcemag_exp,axialforce_exp,displacement_exp]=readdata_solid(filepath,...
                parent_dir,spring_height,wire_dia);
            
            %5(5)function call for generating plots
            fprintf('* Generating plots *\n');
            generateplots_solid(filepath,sideforcemag,sideforce,axialforce,displacement,...
                sideforcemag_exp,axialforce_exp,displacement_exp);
            
            %(6)save results to the structure
            result(itotal).wire_dia = wire_dia;
            result(itotal).spring_height = spring_height;
            result(itotal).spring_max_radius = spring_max_radius;
            result(itotal).spring_initial_radius= spring_initial_radius;
            result(itotal).notinterfering = notinterfering;            
            
            result(itotal).sideforce=sideforce;
            result(itotal).axialforce = axialforce';
            result(itotal).displacement = displacement';
            result(itotal).sideforcemag =sideforcemag;
            
            result(itotal).axialforce_exp = axialforce_exp;
            result(itotal).displacement_exp = displacement_exp;
            result(itotal).sideforcemag_exp =sideforcemag_exp;
            
            result(itotal).springyoungmodulus = springyoungmodulus(iE);
            result(itotal).friction_coeff = friction_coeff(iu);
            result(itotal).springmeshSize=springmeshSize(ims);
            result(itotal).platemeshSize=platemeshSize(ims);
            
            values = 1:1:(itotal);
            keys{itotal} = strcat(num2str(iE),num2str(iu),num2str(ims));
            save(matfilename,'result','values','keys','wire_dia','spring_height','spring_max_radius',...
                'springyoungmodulus','friction_coeff','springmeshSize','platemeshSize');
            fprintf('* Saving results *\n');
            fprintf(strcat('*** Completed',char(32),num2str(itotal),' iteration at ',datestr(now),' ***\n'));
            fprintf('\n');
            %end
            %to resume from bad iteration
            itotal = itotal+1;
            diary off;
        end
    end
end
diary off;
%create dictionary of keys and values
dict = containers.Map(keys,values);
%save dict to mat file which we can later use to access data
list = {'springyoungmodulus','friction_coeff','springmeshSize'};
save(matfilename,'result','dict','keys','values','wire_dia','spring_height','spring_max_radius',...
    'springyoungmodulus','friction_coeff','springmeshSize','platemeshSize','list');

setpref('Internet','SMTP_Server','smtp.purdue.edu');
setpref('Internet','E_mail','deshmuk5@purdue.edu');
sendmail('deshmuk5@purdue.edu','MATLAB says',strcat('My lord I have finished simulation of ',parent_dir,' at ',datestr(now)));
%exit;
